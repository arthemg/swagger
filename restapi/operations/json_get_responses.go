// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "swagger/models"
)

// JSONGetOKCode is the HTTP code returned for type JSONGetOK
const JSONGetOKCode int = 200

/*JSONGetOK Returns the list of repos

swagger:response jsonGetOK
*/
type JSONGetOK struct {

	/*
	  In: Body
	*/
	Payload models.Jsonrepo `json:"body,omitempty"`
}

// NewJSONGetOK creates JSONGetOK with default headers values
func NewJSONGetOK() *JSONGetOK {

	return &JSONGetOK{}
}

// WithPayload adds the payload to the json get o k response
func (o *JSONGetOK) WithPayload(payload models.Jsonrepo) *JSONGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the json get o k response
func (o *JSONGetOK) SetPayload(payload models.Jsonrepo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *JSONGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.Jsonrepo, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// JSONGetNotFoundCode is the HTTP code returned for type JSONGetNotFound
const JSONGetNotFoundCode int = 404

/*JSONGetNotFound URL not found

swagger:response jsonGetNotFound
*/
type JSONGetNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewJSONGetNotFound creates JSONGetNotFound with default headers values
func NewJSONGetNotFound() *JSONGetNotFound {

	return &JSONGetNotFound{}
}

// WithPayload adds the payload to the json get not found response
func (o *JSONGetNotFound) WithPayload(payload *models.ErrorResponse) *JSONGetNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the json get not found response
func (o *JSONGetNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *JSONGetNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// JSONGetInternalServerErrorCode is the HTTP code returned for type JSONGetInternalServerError
const JSONGetInternalServerErrorCode int = 500

/*JSONGetInternalServerError Something has gone horribly wrong

swagger:response jsonGetInternalServerError
*/
type JSONGetInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewJSONGetInternalServerError creates JSONGetInternalServerError with default headers values
func NewJSONGetInternalServerError() *JSONGetInternalServerError {

	return &JSONGetInternalServerError{}
}

// WithPayload adds the payload to the json get internal server error response
func (o *JSONGetInternalServerError) WithPayload(payload *models.ErrorResponse) *JSONGetInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the json get internal server error response
func (o *JSONGetInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *JSONGetInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
